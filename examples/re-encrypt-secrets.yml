name: Example Workflow with GitHub API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APPLICATION_PUBLIC_KEY_PATH: './.github/gpg.pub'
  WORKSPACE_PATH: './workspace'
  PUBLIC_KEYS_FILE: './public_keys.txt'

jobs:
  use-rust-action:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Fetch Public Keys of Contributors and Team Members
      - name: Fetch Public Keys from GitHub
        id: fetch-keys
        run: |
          # Fetch contributors' public keys using the GitHub API
          TEAM_MEMBERS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/contributors | jq -r '.[].login')

          # Initialize the public keys file
          > $PUBLIC_KEYS_FILE

          # Add application public key to the file
          APP_PUBLIC_KEY=$(cat $APPLICATION_PUBLIC_KEY_PATH | base64 -w 0)
          echo "$APP_PUBLIC_KEY" >> $PUBLIC_KEYS_FILE

          # Fetch public keys for each contributor
          for MEMBER in $TEAM_MEMBERS; do
            echo "Fetching public key for $MEMBER"
            MEMBER_KEYS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/users/$MEMBER/gpg_keys | jq -r '.[].raw_key')

            # If keys are found, append them to the public keys file
            if [ -n "$MEMBER_KEYS" ]; then
              for KEY in $MEMBER_KEYS; do
                echo "$KEY" | base64 -w 0 >> $PUBLIC_KEYS_FILE
              done
            else
              echo "No public keys found for $MEMBER"
            fi
          done

          # Encode the file for input
          base64 -w 0 < $PUBLIC_KEYS_FILE > encoded_public_keys.txt

      # Step 3: Run Rust-based Action
      - name: Run Rust-based Action
        uses: your-username/your-action-repo@v1
        with:
          workspace: ${{ env.WORKSPACE_PATH }}
          public_keys: ${{ steps.fetch-keys.outputs.public_keys }}
          team_private_key: ${{ secrets.GPG_KEY }}

      # Optional Step: Verify Action Output
      - name: Verify Action Output
        run: |
          echo "Check results in the workspace directory"
